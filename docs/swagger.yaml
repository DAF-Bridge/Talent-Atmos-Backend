definitions:
  dto.EventShortResponseDTO:
    properties:
      endDate:
        example: "2024-11-29"
        type: string
      endTime:
        example: "17:00"
        type: string
      id:
        example: 1
        type: integer
      location:
        example: builds CMU
        type: string
      name:
        example: builds IDEA 2024
        type: string
      picUrl:
        example: https://example.com/image.jpg
        type: string
      startDate:
        example: "2024-11-29"
        type: string
      startTime:
        example: "08:00"
        type: string
    type: object
  dto.PaginatedEventsResponse:
    properties:
      events:
        items:
          $ref: '#/definitions/dto.EventShortResponseDTO'
        type: array
      total_events:
        example: 1
        type: integer
    type: object
  dto.UploadResponse:
    properties:
      pic_url:
        example: https://s3.amazonaws.com/your-bucket/your-object
        type: string
    type: object
  fiber.Map:
    additionalProperties: true
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  handler.EventShortResponse:
    properties:
      endDate:
        type: string
      endTime:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      picUrl:
        type: string
      startDate:
        type: string
      startTime:
        type: string
    type: object
  handler.SignUpHandlerRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  models.Audience:
    enum:
    - general
    - students
    - professionals
    type: string
    x-enum-varnames:
    - General
    - Students
    - Professionals
  models.CareerStage:
    enum:
    - entrylevel
    - senior
    - junior
    type: string
    x-enum-varnames:
    - CareerStageEntryLevel
    - CareerStageSenior
    - CareerStageJunior
  models.Category:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      isActive:
        type: boolean
      name:
        type: string
      parentID:
        description: ParentID is a Self-referencing foreign key If categories can
          be nested (e.g., "Technology" â†’ "AI"), add a ParentID field for self-referencing
          categories.
        type: integer
      slug:
        description: A Slug field helps create readable URLs (/category/artificial-intelligence
          instead of /category/123).
        type: string
      sortOrder:
        description: 'For sorting categories in a preferred order: e.g., "Technology"
          should come before "Business"'
        type: integer
      sub_categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      updatedAt:
        type: string
    type: object
  models.Event:
    properties:
      audience:
        $ref: '#/definitions/models.Audience'
      category:
        $ref: '#/definitions/models.Category'
      categoryID:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      endDate:
        type: string
      endTime:
        type: string
      highlight:
        type: string
      id:
        type: integer
      keyTakeaway:
        type: string
      latitude:
        type: number
      locationName:
        type: string
      locationType:
        $ref: '#/definitions/models.LocationType'
      longitude:
        type: number
      name:
        type: string
      organization:
        $ref: '#/definitions/models.Organization'
      organizationID:
        type: integer
      picUrl:
        type: string
      priceType:
        $ref: '#/definitions/models.PriceType'
      province:
        type: string
      requirement:
        type: string
      startDate:
        type: string
      startTime:
        type: string
      ticketAvailable:
        items:
          $ref: '#/definitions/models.TicketAvailable'
        type: array
      timeline:
        items:
          $ref: '#/definitions/models.Timeline'
        type: array
      updatedAt:
        type: string
    type: object
  models.Industry:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      industry:
        type: string
      organization:
        items:
          $ref: '#/definitions/models.Organization'
        type: array
      updatedAt:
        type: string
    type: object
  models.LocationType:
    enum:
    - online
    - onsite
    type: string
    x-enum-varnames:
    - Online
    - Onsite
  models.Media:
    enum:
    - website
    - facebook
    - instagram
    - tiktok
    - youtube
    - linkedin
    - line
    type: string
    x-enum-varnames:
    - MediaWebsite
    - MediaFacebook
    - MediaIG
    - MediaTikTok
    - MediaYoutube
    - MediaLinkedin
    - MediaLine
  models.OrgOpenJob:
    properties:
      benefits:
        example: Health insurance
        type: string
      career_stage:
        allOf:
        - $ref: '#/definitions/models.CareerStage'
        example: entrylevel
      category:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      created_at:
        example: "2024-11-29T08:00:00Z"
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        example: This is a description
        type: string
      hours_per_day:
        example: 8 hours
        type: string
      id:
        example: 1
        type: integer
      organization_id:
        example: 1
        type: integer
      period:
        example: 1 year
        type: string
      prerequisite:
        description: Required qualifications or skills
        example:
        - Great at problem solving
        - Reliable
        items:
          type: string
        type: array
      qualifications:
        example: Bachelor's degree in Computer Science
        type: string
      quantity:
        example: 1
        type: integer
      salary:
        example: 30000
        type: number
      scope:
        example: Software Development
        type: string
      title:
        example: Software Engineer
        type: string
      updated_at:
        example: "2024-11-29T08:00:00Z"
        type: string
      updatedAt:
        type: string
      work_type:
        allOf:
        - $ref: '#/definitions/models.WorkType'
        example: fulltime
      workplace:
        allOf:
        - $ref: '#/definitions/models.Workplace'
        example: remote
    type: object
  models.Organization:
    properties:
      created_at:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      expertise:
        description: Organization's area of expertise
        type: string
      goal:
        description: Detailed description of the organization's goal
        items:
          type: string
        type: array
      id:
        type: integer
      industry:
        items:
          $ref: '#/definitions/models.Industry'
        type: array
      latitude:
        description: Geographic latitude (stored as string for precision)
        type: string
      location:
        description: General location
        type: string
      longitude:
        description: Geographic longitude (stored as string for precision)
        type: string
      org_email:
        description: Email address (unique constraint)
        type: string
      org_name:
        type: string
      org_phone:
        type: string
      orgOpenJobs:
        items:
          $ref: '#/definitions/models.OrgOpenJob'
        type: array
      organizationContacts:
        items:
          $ref: '#/definitions/models.OrganizationContact'
        type: array
      pic_url:
        description: URL to organization's logo
        type: string
      postal_code:
        description: Postal code, allowing for flexibility in format
        type: string
      province:
        description: Province name
        type: string
      subdistrict:
        description: Subdistrict name
        type: string
      updated_at:
        type: string
      updatedAt:
        type: string
    type: object
  models.OrganizationContact:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      media:
        $ref: '#/definitions/models.Media'
      media_link:
        type: string
      organization_id:
        type: integer
      updatedAt:
        type: string
    type: object
  models.PriceType:
    enum:
    - free
    - paid
    type: string
    x-enum-varnames:
    - Free
    - Paid
  models.Provider:
    enum:
    - google
    - facebook
    - local
    type: string
    x-enum-varnames:
    - ProviderGoogle
    - ProviderFacebook
    - ProviderLocal
  models.Role:
    enum:
    - User
    - Admin
    type: string
    x-enum-varnames:
    - RoleUser
    - RoleAdmin
  models.TicketAvailable:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      event:
        $ref: '#/definitions/models.Event'
      eventID:
        type: integer
      id:
        type: integer
      price:
        type: number
      quantity:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  models.Timeline:
    properties:
      activity:
        example: Registration
        type: string
      time:
        example: "08:00"
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        description: Hashed password for traditional login
        type: string
      picUrl:
        type: string
      provider:
        allOf:
        - $ref: '#/definitions/models.Provider'
        description: e.g., "google"
      providerID:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      updatedAt:
        type: string
    type: object
  models.WorkType:
    enum:
    - fulltime
    - parttime
    - internship
    - volunteer
    type: string
    x-enum-varnames:
    - WorkTypeFullTime
    - WorkTypePartTime
    - WorkTypeInternship
    - WorkTypeVolunteer
  models.Workplace:
    enum:
    - onsite
    - remote
    - hybrid
    type: string
    x-enum-varnames:
    - WorkplaceOnsite
    - WorkplaceRemote
    - WorkplaceHybrid
  service.EventCardResponses:
    properties:
      endDate:
        example: "2024-11-29"
        type: string
      endTime:
        example: "17:00"
        type: string
      id:
        example: 1
        type: integer
      location:
        example: builds CMU
        type: string
      name:
        example: builds IDEA 2024
        type: string
      organization:
        $ref: '#/definitions/service.OrganizationShortRespones'
      organization_id:
        example: 1
        type: integer
      picUrl:
        example: https://example.com/image.jpg
        type: string
      province:
        example: Chiang Mai
        type: string
      startDate:
        example: "2024-11-29"
        type: string
      startTime:
        example: "08:00"
        type: string
    type: object
  service.EventResponses:
    properties:
      audience:
        example: genteral
        type: string
      category:
        example: all
        type: string
      category_id:
        example: 2
        type: integer
      description:
        example: This is a description
        type: string
      endDate:
        example: "2024-11-29"
        type: string
      endTime:
        example: "17:00"
        type: string
      highlight:
        example: This is a highlight
        type: string
      id:
        example: 1
        type: integer
      keyTakeaway:
        example: This is a key takeaway
        type: string
      latitude:
        example: 13.7563
        type: number
      locationName:
        example: builds CMU
        type: string
      locationType:
        example: onsite
        type: string
      longitude:
        example: 100.5018
        type: number
      name:
        example: builds IDEA 2024
        type: string
      organization_id:
        example: 1
        type: integer
      picUrl:
        example: https://example.com/image.jpg
        type: string
      priceType:
        example: free
        type: string
      province:
        example: Chiang Mai
        type: string
      requirement:
        example: This is a requirement
        type: string
      startDate:
        example: "2024-11-29"
        type: string
      startTime:
        example: "08:00"
        type: string
      timeLine:
        items:
          $ref: '#/definitions/models.Timeline'
        type: array
    type: object
  service.JobRequest:
    properties:
      CreatedAt:
        example: "2024-11-29T08:00:00Z"
        type: string
      UpdatedAt:
        example: "2024-11-29T08:00:00Z"
        type: string
      benefits:
        example: Health insurance
        type: string
      career_stage:
        allOf:
        - $ref: '#/definitions/models.CareerStage'
        example: entrylevel
      description:
        example: This is a description
        type: string
      hours_per_day:
        example: 8 hours
        type: string
      period:
        example: 1 year
        type: string
      prerequisite:
        example:
        - Bachelor's degree in Computer Science
        items:
          type: string
        type: array
      qualifications:
        example: Bachelor's degree in Computer Science
        type: string
      quantity:
        example: 1
        type: integer
      salary:
        example: 30000
        type: number
      scope:
        example: This is a scope
        type: string
      title:
        example: Software Engineer
        type: string
      work_type:
        allOf:
        - $ref: '#/definitions/models.WorkType'
        example: fulltime
      workplace:
        allOf:
        - $ref: '#/definitions/models.Workplace'
        example: remote
    type: object
  service.JobResponses:
    properties:
      UpdatedAt:
        example: "2024-11-29 08:00:00"
        type: string
      benefits:
        example: Health insurance
        type: string
      career_stage:
        allOf:
        - $ref: '#/definitions/models.CareerStage'
        example: entrylevel
      description:
        example: This is a description
        type: string
      hours_per_day:
        example: 8 hours
        type: string
      id:
        example: 1
        type: integer
      location:
        example: Chiang Mai
        type: string
      organization:
        example: builds CMU
        type: string
      period:
        example: 1 year
        type: string
      qualifications:
        example: Bachelor's degree in Computer Science
        type: string
      quantity:
        example: 1
        type: integer
      salary:
        example: 30000
        type: number
      scope:
        example: This is a scope
        type: string
      title:
        example: Software Engineer
        type: string
      work_type:
        allOf:
        - $ref: '#/definitions/models.WorkType'
        example: fulltime
      workplace:
        allOf:
        - $ref: '#/definitions/models.Workplace'
        example: remote
    type: object
  service.NewEventRequest:
    properties:
      audience:
        example: general
        type: string
      description:
        example: This is a description
        type: string
      endDate:
        example: "2025-01-22"
        type: string
      endTime:
        example: "17:00"
        type: string
      highlight:
        example: This is a highlight
        type: string
      keyTakeaway:
        example: This is a key takeaway
        type: string
      latitude:
        example: 13.7563
        type: number
      locationName:
        example: Bangkok
        type: string
      locationType:
        example: onsite
        type: string
      longitude:
        example: 100.5018
        type: number
      name:
        example: builds IDEA 2024
        type: string
      picUrl:
        example: https://example.com/image.jpg
        type: string
      priceType:
        example: free
        type: string
      province:
        example: Chiang Mai
        type: string
      requirement:
        example: This is a requirement
        type: string
      startDate:
        example: "2025-01-25"
        type: string
      startTime:
        example: "08:00"
        type: string
      timeLine:
        items:
          $ref: '#/definitions/models.Timeline'
        type: array
    required:
    - audience
    - description
    - endDate
    - endTime
    - highlight
    - keyTakeaway
    - latitude
    - locationName
    - locationType
    - longitude
    - name
    - picUrl
    - priceType
    - province
    - requirement
    - startDate
    - startTime
    type: object
  service.OrganizationShortRespones:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: builds CMU
        type: string
      picUrl:
        example: https://example.com/image.jpg
        type: string
    type: object
info:
  contact: {}
paths:
  /events:
    get:
      description: Get a list of all events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/service.EventResponses'
              type: array
            type: array
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: List all events
      tags:
      - Events
  /events-paginate:
    get:
      description: Get a paginated list of events
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PaginatedEventsResponse'
        "400":
          description: Bad Request - Invalid page number
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Paginate events
      tags:
      - Events
  /events-paginate/search:
    get:
      consumes:
      - application/json
      description: Search events by keyword
      parameters:
      - description: Keyword to search for events
        in: query
        name: q
        required: true
        type: string
      - description: Category of events
        in: query
        name: category
        type: string
      - description: Location Type of events
        in: query
        name: locationType
        type: string
      - description: Main Audience of events
        in: query
        name: audience
        type: string
      - description: Price Type of events
        in: query
        name: priceType
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
        "400":
          description: error - Bad Request"}
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: error - events not found"}
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: error - Internal Server Error"}
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Search events
      tags:
      - Searching
  /events/first:
    get:
      description: Get the first event
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handler.EventShortResponse'
            type: array
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get the first event
      tags:
      - Events
  /events/q:
    get:
      consumes:
      - application/json
      description: Search for events based on various criteria such as search term,
        category, location type, audience, and price type.
      parameters:
      - description: Search term
        in: query
        name: search
        type: string
      - description: Event category
        in: query
        name: category
        type: string
      - description: Location type
        in: query
        name: location
        type: string
      - description: Audience type
        in: query
        name: audience
        type: string
      - description: Price type
        in: query
        name: price
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.EventCardResponses'
            type: array
        "400":
          description: Bad Request - Invalid query parameters
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Not Found - Events not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal server error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Search for events
      tags:
      - Events
  /events/upcoming:
    get:
      description: Get a list of upcoming events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.EventResponses'
            type: array
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get upcoming events
      tags:
      - Events
  /orgs:
    post:
      consumes:
      - application/json
      description: Create a new organization BUT still not create the Contact and
        OpenJob
      parameters:
      - description: Organization
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/models.Organization'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request - json body is required or invalid / organization
            name is required
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Create a new organization
      tags:
      - Organization
  /orgs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an organization by ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request - organization id is required / invalid organization
            id
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete an organization by ID
      tags:
      - Organization
    get:
      consumes:
      - application/json
      description: Get an organization by ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request - organization id is required
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Not Found - organization not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get an organization by ID
      tags:
      - Organization
    put:
      consumes:
      - application/json
      description: Update an organization by ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      - description: Organization
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/models.Organization'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request - organization id is required / invalid organization
            ID
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Update an organization by ID
      tags:
      - Organization
  /orgs/{orgID}/events:
    get:
      description: Get a list of all events for a specific organization
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/service.EventResponses'
              type: array
            type: array
        "400":
          description: Bad Request - Invalid organization id or missing orgID parameters
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: List all events for a specific organization
      tags:
      - Events
  /orgs/{orgID}/events/{catID}:
    post:
      consumes:
      - application/json
      description: Create a new event for a specific organization
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      - description: Category ID
        in: path
        name: catID
        required: true
        type: integer
      - description: Event data
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/service.NewEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.EventResponses'
        "400":
          description: Bad Request - organization id is required or invalid / event
            body is invalid
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Create a new event (Not Finished!!!! Cannot add locationType, audience,
        and priceType)
      tags:
      - Events
  /orgs/{orgID}/events/{id}:
    delete:
      description: Delete an event by its ID for a specific organization
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.EventResponses'
        "400":
          description: Bad Request - Invalid organization id or missing orgID parameters
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete an event
      tags:
      - Events
    get:
      description: Get an event by its ID for a specific organization
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.EventResponses'
            type: array
        "400":
          description: Bad Request - Invalid organization id or missing orgID parameters
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get an event by ID
      tags:
      - Events
  /orgs/{orgID}/jobs/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an organization job by ID
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request - organization id & job id is required
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete an organization job by ID
      tags:
      - Organization Job
  /orgs/{orgID}/jobs/get/{id}:
    get:
      consumes:
      - application/json
      description: Get an organization open job by ID
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.JobResponses'
        "400":
          description: Bad Request - organization id & job id is required
          schema:
            $ref: '#/definitions/fiber.Map'
        "404":
          description: Not Found - jobs not found
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get an organization open job by ID
      tags:
      - Organization Job
  /orgs/{orgID}/jobs/list:
    get:
      consumes:
      - application/json
      description: Get all organization open jobs
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.JobResponses'
            type: array
        "400":
          description: Bad Request - organization id is required or invalid
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: List all jobs of its organization
      tags:
      - Organization Job
  /orgs/{orgID}/jobs/open:
    post:
      consumes:
      - application/json
      description: Create a new organization open job
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      - description: Organization Open Job
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/service.JobRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.OrgOpenJob'
        "400":
          description: Bad Request - json body is required or invalid / job title
            is required
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Create a new organization open job
      tags:
      - Organization Job
  /orgs/{orgID}/jobs/update/{id}:
    put:
      consumes:
      - application/json
      description: Update an organization open job by ID
      parameters:
      - description: Organization ID
        in: path
        name: orgID
        required: true
        type: integer
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      - description: Organization Open Job
        in: body
        name: org
        required: true
        schema:
          $ref: '#/definitions/service.JobRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrgOpenJob'
        "400":
          description: Bad Request - organization id & job id is required
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Update an organization open job by ID
      tags:
      - Organization Job
  /orgs/jobs/list/all:
    get:
      consumes:
      - application/json
      description: Get all organization jobs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.JobResponses'
            type: array
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: List all organization jobs
      tags:
      - Organization Job
  /orgs/list:
    get:
      consumes:
      - application/json
      description: Get all organizations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Organization'
            type: array
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: List all organizations
      tags:
      - Organization
  /orgs/paginate:
    get:
      consumes:
      - application/json
      description: Get a page of organizations
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Organization'
            type: array
        "400":
          description: Bad Request - invalid page
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Get a page of organizations
      tags:
      - Organization
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user in the system
      parameters:
      - description: Sign Up Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.SignUpHandlerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 'message: Sign up successful" "OK'
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Bad Request - Invalid input
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal Server Error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Sign up a new user
      tags:
      - Authentication
  /users:
    get:
      consumes:
      - application/json
      description: List all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal server error - Something went wrong
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: List all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request - Invalid user object
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal server error - Failed to create user
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Create a new user
      tags:
      - Users
  /users/{id}/upload-profile:
    post:
      consumes:
      - multipart/form-data
      description: Upload profile picture for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Profile picture file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Uploaded image URL
          schema:
            $ref: '#/definitions/dto.UploadResponse'
        "400":
          description: Bad request - Invalid file/user ID
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal server error - Failed to update profile picture
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Upload profile picture
      tags:
      - Users
swagger: "2.0"
